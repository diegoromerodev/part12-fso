{"version":3,"sources":["Filter.js","Notification.js","services/persons.js","PersonForm.js","PersonItem.js","Persons.js","App.js","index.js"],"names":["setFilter","filter","onChange","e","target","value","notification","message","className","type","baseURL","axios","get","then","res","data","personObj","post","put","id","personId","delete","props","persons","setPersons","setNotification","useState","newName","setNewName","newNumber","setNewNumber","handleError","err","response","error","setTimeout","onSubmit","preventDefault","dupe","tester","RegExp","find","person","test","name","checkDuplicate","confirm","number","personsServices","map","p","catch","personData","concat","handleDelete","style","border","padding","margin","marginRight","backgroundColor","color","onClick","reduce","personsResult","includes","push","PersonItem","window","App","useEffect","Notification","Filter","PersonForm","Persons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1233801e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ setFilter, filter }) => {\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n  return (\n    <div>\n      filter: <input onChange={handleFilterChange} value={filter} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ notification }) => {\n  if (!notification.message) return null;\n  return (\n    <div className={notification.type}>\n      <p>{notification.message}</p>\n    </div>\n  );\n};\n","import axios from \"axios\";\n\nconst baseURL = \"/api/persons/\";\n\nconst getAll = () => {\n  return axios.get(baseURL).then((res) => res.data);\n};\n\nconst saveOne = (personObj) => {\n  return axios.post(baseURL, personObj).then((res) => res.data);\n};\n\nconst updateOne = (personObj) => {\n  return axios.put(baseURL + personObj.id, personObj).then((res) => res.data);\n};\n\nconst deleteOne = (personId) => {\n  return axios.delete(baseURL + personId);\n};\n\nexport default { getAll, saveOne, updateOne, deleteOne };\n","import React, { useState } from \"react\";\nimport personsServices from \"./services/persons\";\n\nexport default (props) => {\n  const { persons, setPersons, setNotification } = props;\n\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n  const checkDuplicate = (value) => {\n    const tester = new RegExp(value, \"i\");\n    return persons.find((person) => tester.test(person.name));\n  };\n\n  const handleError = (err) => {\n    setNotification({\n      message: err.response.data.error,\n      type: \"warning\",\n    });\n    setTimeout(() => setNotification({}), 6000);\n  };\n\n  const addName = (e) => {\n    e.preventDefault();\n    if (!newName || !newNumber) return;\n    const dupe = checkDuplicate(newName);\n    if (dupe) {\n      if (\n        !confirm(\n          `${newName} is already present in the phonebook, do you want to update the number?`\n        )\n      ) {\n        return false;\n      }\n      dupe.number = newNumber;\n      setNewName(\"\");\n      setNewNumber(\"\");\n      personsServices\n        .updateOne(dupe)\n        .then(() => {\n          setPersons(persons.map((p) => (p.id === dupe.id ? dupe : p)));\n          setNotification({\n            message: `Successfully updated ${dupe.name}'s number.`,\n            type: \"success\",\n          });\n          setTimeout(() => setNotification({}), 3000);\n        })\n        .catch((err) => {\n          handleError(err);\n        });\n      return true;\n    }\n\n    const personObj = {\n      name: newName,\n      number: newNumber,\n    };\n\n    personsServices\n      .saveOne(personObj)\n      .then((personData) => {\n        setPersons(persons.concat(personData));\n        setNotification({\n          message: `Successfully added ${personObj.name}'s number.`,\n          type: \"success\",\n        });\n        setTimeout(() => setNotification({}), 3000);\n      })\n      .catch((err) => {\n        handleError(err);\n      });\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input onChange={handleNameChange} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const { person, handleDelete } = props;\n\n  return (\n    <div\n      style={{\n        border: \"2px solid #333\",\n        padding: \"10px\",\n        margin: \"10px\",\n        marginRight: \"50%\",\n      }}\n    >\n      <p>\n        {person.name} - {person.number}\n      </p>\n      <button\n        type=\"button\"\n        style={{ backgroundColor: \"lightcoral\", color: \"#fafafa\" }}\n        onClick={handleDelete}\n      >\n        delete?\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport PersonItem from \"./PersonItem\";\nimport personsServices from \"./services/persons\";\n\nexport default ({ persons, filter, setPersons }) => {\n  const handleDelete = ({ id, name }) => {\n    if (!window.confirm(`Delete ${name}?`)) {\n      return false;\n    }\n    personsServices.deleteOne(id).then(() => {\n      setPersons(persons.filter((p) => p.id !== id));\n    });\n  };\n  return (\n    <>\n      {persons.reduce((personsResult, person) => {\n        if (filter && !person.name.includes(filter)) return personsResult;\n        personsResult.push(\n          <PersonItem\n            key={person.id}\n            handleDelete={() => handleDelete(person)}\n            person={person}\n          />\n        );\n        return personsResult;\n      }, [])}\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./Filter\";\nimport Notification from \"./Notification\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport personsServices from \"./services/persons\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [notification, setNotification] = useState({});\n\n  useEffect(() => {\n    personsServices.getAll().then(setPersons);\n  }, []);\n\n  return (\n    <div>\n      <Notification notification={notification} />\n      <h2>Phonebook</h2>\n      <Filter filter={filter} setFilter={setFilter} />\n      <PersonForm\n        persons={persons}\n        setPersons={setPersons}\n        setNotification={setNotification}\n      />\n      <h2>Numbers</h2>\n      <Persons filter={filter} persons={persons} setPersons={setPersons} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}